--CRUD 操作（增删改查）

select version();
select now();

1.查询所有学生的信息
select * from tb_student;    # * 指所有

2.查询所有课程名称及学分(投影和别名)
select couname,coucredit from tb_course;
select couname as 课程名称,coucredit as 学分 from tb_course;   #起别名，改变每列的表头
select couname 课程名称,coucredit 学分 from tb_course;   #as 可省略

select stuname as 姓名,case stusex when 1 then '男' else '女' end as 性别 from tb_student;  #使用cat  end 可以替换表中的数据
select stuname as 姓名,if (stusex,'男','女') as 性别 from tb_student;    #使用了if函数，其他类型数据库可能无法使用
3.查询所有女学生的姓名和出生日期(筛选)
select stuname,stubirth from tb_student where stusex=0;

4.查询所有80后学生的姓名，性别和出生日期(筛选)
select stuname,stusex,stubirth from tb_student
where stubirth>='1980-1-1' and stubirth<='1989-12-31';

select stuname,stusex,stubirth from tb_student
where stubirth between '1980-1-1' and '1989-12-31';     #使用between较为直观

5.查询姓'赵'的学生姓名和性别(模糊)               #模糊匹配时，使用like
select stuname,stusex from tb_student where stuname like '赵%';   #%只限制姓是赵，不限制名的个数

6.查询姓'赵'名字两个字的学生姓名和性别(模糊)
select stuname,stusex from tb_student where stuname like '赵_';     #_ 只占一个字

7.查询姓'德'名字三个字的学生的学生姓名和性别(模糊)
select stuname,stusex from tb_student where stuname like '德__';

8.查询名字中有'不'字或'嫣'字的学生的姓名(模糊)
select stuname from tb_student where stuname like '%里%' or stuname like  '%克%';

9.查询没有录入家庭住址的学生姓名(空值)  #查询空值时不能使用=，或者不等号<>
select stuname from tb_student where stuaddr is null;
10.查询录入了家庭住址的学生姓名(空值)
select stuname from tb_student where stuaddr is not null;

11.查询学生选课的所有日期(去重)  # distinct 表示去重函数
select distinct scdate from tb_score;

12.查询学生的家庭住址(去重)
select distinct stuaddr from tb_student where stuaddr is not null;

13.查询男学生的姓名和生日按年龄从大到小排列(排序)
#排序函数 order by (可加多个排序关键字) asc/desc
#asc - ascending - 升序(从小到大)
#desc - descending - 降序(从大到小)

select stuname,stubirth from tb_student where stusex='1' order by stubirth asc;
select stuname,year(now())-year(stubirth) as 年龄 from tb_student where stusex=1 order by 年龄 desc;


聚合函数：max/min/count/sum/avg
14.查询年龄最大的学生的出生日期(聚合函数)
select min(stubirth) from tb_student;
15.查询年龄最小的学生的出生日期(聚合函数)
select max(stubirth) from tb_student;
16.查询男女学生的人数(分组和聚合函数)
select count(stuid) from tb_student;
select stusex,count(stusex) from tb_student group by stusex;  #按照性别分组分组group by
select stusex,min(stubirth) from tb_student group by stusex;
17.查询课程编号为1111的课程的平均成绩(筛选和聚合函数)
select avg(scmark) from tb_score where couid=1111;
select min(scmark) from tb_score where couid=1111;
select count(stuid) from tb_score where couid=1111;

18.查询学号为1001的学生所有课程的平均分(筛选和聚合函数)
select avg(scmark) from tb_score where stuid=1001;

19.查询每个学生的学号和平均成绩(分组和聚合函数)
select stuid,avg(scmark) as 平均分 from tb_score group by stuid;
20.查询平均成绩大于等于90分的学生的学号和平均成绩
select stuid,avg(scmark) as 平均分 from tb_score group by stuid having 平均分>=90;  #分组以后的筛选用having子句

21.查询年龄最大的学生的姓名(子查询)      #嵌套查询
select stuname from tb_student where stubirth=(
            select min(stubirth) from tb_student
);
22.查询年龄最大的学生姓名和年龄(子查询+运算)
select stuname,year(now())-year(stubirth) as 年龄 from tb_student where stubirth=(
            select min(stubirth) from tb_student
);
23.查询选了两门以上的课程的学生姓名(子查询/分组条件/集合运算)
select stuname from tb_student where stuid in (
select stuid from tb_score group by stuid having count(stuid)>2
);

24.查询学生姓名，课程名称以及成绩(连接查询)
#第一种
select stuname,couname,scmark from tb_student t1,tb_course t2,tb_score t3   #t1,t2,t3为起的别名
where t1.stuid=t3.stuid and t2.couid=t3.couid and scmark is not null;
#第二种
select stuname,couname,scmark from tb_student t1
inner join tb_score t3 on t1.stuid=t3.stuid
inner join tb_course t2 on t2.couid=t3.couid where scmark is not null;

25.查询选课学生的姓名和平均成绩(子查询和连接查询)
#第一种
select stuname,avgmark from tb_student t1,
(select stuid,avg(scmark) as avgmark from tb_score group by stuid) t2
where t1.stuid=t2.stuid and t2.avgmark is not null;

#第二种 inner join(连表)  on (连表条件)    内连接
select stuname,avgmark from tb_student t1 inner join
(select stuid,avg(scmark) as avgmark from tb_score group by stuid) t2
on t1.stuid=t2.stuid and t2.avgmark is not null;
26.查询每个学生的姓名和选课数量(左外连接和子查询)
#外连接分为：左外连接(left outer join)/右外连接/全外连接
select stuname,total from tb_student t1 inner join  #内连接无法查询完整
(select stuid,count(stuid) as total from tb_score group by stuid) t2
on t1.stuid=t2.stuid;

#ifnull()   如果是空值，数据改为0
select stuname,ifnull(total,0) from tb_student t1 left outer join    #左外连接
(select stuid,count(stuid) as total from tb_score group by stuid) t2
on t1.stuid=t2.stuid limit 5 offset 5;  #limit 5 offset 5 跳过5条查后5条，也可以写成 limit 5,5


27.




















